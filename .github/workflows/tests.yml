name: Run Browser Tests

on:
  workflow_dispatch:
    inputs:
      users:
        description: Number of users
        required: true
        default: '100'
      iterations:
        description: Iterations per user
        required: true
        default: '100'
      messages:
        description: Messages (true or false)
        required: true
        default: 'false'
      emotes:
        description: Emotes (true or false)
        required: true
        default: 'false'
      concurrent:
        description: Concurrent users per job (Up to 5 works well)
        required: true
        default: '5'

jobs:
  gen-matrix:
    runs-on: ubuntu-latest
    name: Generate Matrix
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - id: gen-matrix
        env:
          concurrent: ${{ github.event.inputs.concurrent }}
          users: ${{ github.event.inputs.users }}
        run: |
          printf '::set-output name=matrix::%s' \
            "$(jq -ecn \
              --argjson users "$users" --argjson concurrent "$concurrent" \
              '{"offset": [range(0; $users / $concurrent) * $concurrent]}')"


  install-dependencies:
    runs-on: ubuntu-latest
    name: "Install Dependencies"
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache node_modules
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Cache ~/.npm
        uses: actions/cache@v2
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - uses: actions/setup-node@v2
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        with:
          node-version: '14'

      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline


  test:
    runs-on: ubuntu-latest
    name: "Offset #${{ matrix.offset }}"
    needs: [gen-matrix, install-dependencies]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run Browser
        env:
          concurrent: ${{ github.event.inputs.concurrent }}
          emotes: ${{ github.event.inputs.emotes }}
          iterations: ${{ github.event.inputs.iterations }}
          messages: ${{ github.event.inputs.messages }}
          offset: ${{ matrix.offset }}
          url: ${{ secrets.GAME_URL }}
        run: |
          if [ "$emotes" = 'true' ]; then
            flags="$flags --emotes"
          fi
          if [ "$messages" = 'true' ]; then
            flags="$flags --messages"
          fi

          npm run browser -- --url="$url" --limit="$concurrent" --offset="$offset" --iterations="$iterations" --headless $flags

      - name: Upload Error Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: errors-offset-${{ matrix.offset }}
          path: ./errors/*.png
          if-no-files-found: ignore
          retention-days: 1
